gitea:
  ingress:
    enabled: true
    ingressClassName: "traefik"  # Usar Traefik como controlador de Ingress
    annotations:
      kubernetes.io/ingress.class: "traefik"
    hosts:
      - host: gitea.mabecenter.org  # El dominio donde se accederá a gitea
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: tls-cert  # Certificado TLS para la conexión segura
        hosts:
          - gitea.mabecenter.org
        
  gitea:
    admin:
      existingSecret: gitea-admin-secret

    config:
      storage:
        STORAGE_TYPE: "minio"
        MINIO_ENDPOINT: "minio.minio.svc.cluster.local:9000"
        MINIO_ACCESS_KEY_ID: "minioadmin"
        MINIO_SECRET_ACCESS_KEY: "minio123"
        MINIO_BUCKET: "gitea"
        MINIO_LOCATION: "us-east-1"
        MINIO_USE_SSL: false

      actions:
        enabled: false
        statefulset:
          annotations: {}
          labels: {}
          resources: {}
          nodeSelector: {}
          tolerations: []
          affinity: {}
          extraVolumes: []

          actRunner:
            repository: gitea/act_runner
            tag: 0.2.11
            pullPolicy: IfNotPresent
            extraVolumeMounts: []

            # See full example here: https://gitea.com/gitea/act_runner/src/branch/main/internal/pkg/config/config.example.yaml
            config: |
              log:
                level: debug
              cache:
                enabled: false

          dind:
            repository: docker
            tag: 25.0.2-dind
            pullPolicy: IfNotPresent
            extraVolumeMounts: []

            # If the container keeps crashing in your environment, you might have to add the `DOCKER_IPTABLES_LEGACY` environment variable.
            # See https://github.com/docker-library/docker/issues/463#issuecomment-1881909456
            extraEnvs:
              []
              #  - name: "DOCKER_IPTABLES_LEGACY"
              #    value: "1"

          persistence:
            size: 1Gi

        init:
          image:
            repository: busybox
            # Overrides the image tag whose default is the chart appVersion.
            tag: "1.37.0"

        provisioning:
          enabled: false

          annotations: {}
          labels: {}
          resources: {}
          nodeSelector: {}
          tolerations: []
          affinity: {}

          publish:
            repository: bitnami/kubectl
            tag: 1.29.0
            pullPolicy: IfNotPresent

          ttlSecondsAfterFinished: 300

        ## Specify an existing token secret
        ##
        existingSecret: ""
        existingSecretKey: ""

        ## Specify the root URL of the Gitea instance
        giteaRootURL: ""

        ## @section Persistence
        #
        ## @param persistence.enabled Enable persistent storage
        ## @param persistence.create Whether to create the persistentVolumeClaim for shared storage
        ## @param persistence.mount Whether the persistentVolumeClaim should be mounted (even if not created)
        ## @param persistence.claimName Use an existing claim to store repository information
        ## @param persistence.size Size for persistence to store repo information
        ## @param persistence.accessModes AccessMode for persistence
        ## @param persistence.labels Labels for the persistence volume claim to be created
        ## @param persistence.annotations.helm.sh/resource-policy Resource policy for the persistence volume claim
        ## @param persistence.storageClass Name of the storage class to use
        ## @param persistence.subPath Subdirectory of the volume to mount at
        ## @param persistence.volumeName Name of persistent volume in PVC
        persistence:
          enabled: true
          create: true
          mount: true
          claimName: gitea-shared-storage
          size: 10Gi
          accessModes:
            - ReadWriteOnce
          labels: {}
          storageClass:
          subPath:
          volumeName: ""
          annotations:
            helm.sh/resource-policy: keep

        ## @section Image
        ## @param image.registry image registry, e.g. gcr.io,docker.io
        ## @param image.repository Image to start for this pod
        ## @param image.tag Visit: [Image tag](https://hub.docker.com/r/gitea/gitea/tags?page=1&ordering=last_updated). Defaults to `appVersion` within Chart.yaml.
        ## @param image.digest Image digest. Allows to pin the given image tag. Useful for having control over mutable tags like `latest`
        ## @param image.pullPolicy Image pull policy
        ## @param image.rootless Wether or not to pull the rootless version of Gitea, only works on Gitea 1.14.x or higher
        ## @param image.fullOverride Completely overrides the image registry, path/image, tag and digest. **Adjust `image.rootless` accordingly and review [Rootless defaults](#rootless-defaults).**
        image:
          registry: "docker.gitea.com"
          repository: gitea
          # Overrides the image tag whose default is the chart appVersion.
          tag: ""
          digest: ""
          pullPolicy: IfNotPresent
          rootless: true
          fullOverride: ""

        ## @section Global
        #
        ## @param global.imageRegistry global image registry override
        ## @param global.storageClass global storage class override
        global:
          imageRegistry: ""
          storageClass: ""
