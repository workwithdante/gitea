gitea:
  ingress:
    enabled: true
    ingressClassName: "traefik"  # Usar Traefik como controlador de Ingress
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure, web
    hosts:
      - host: gitea.mabecenter.org  # El dominio donde se accederá a gitea
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: tls-cert  # Certificado TLS para la conexión segura
        hosts:
          - gitea.mabecenter.org
  
  gitea:
    admin:
      existingSecret: gitea-admin-secret
    
    additionalConfigFromEnvs:
      # sección [storage] MINIO_LOCATION
      - name:  GITEA__STORAGE__MINIO_LOCATION
        value: us-east-2

      # sección [storage] MINIO_USE_SSL
      - name:  GITEA__STORAGE__MINIO_USE_SSL
        value: "false"

      # sección [storage] MINIO_ENDPOINT
      - name:  GITEA__STORAGE__MINIO_ENDPOINT
        value: minio.minio.svc.cluster.local:9000

      # sección [storage] STORAGE_TYPE
      - name:  GITEA__STORAGE__STORAGE_TYPE
        value: minio

      # sección [storage] MINIO_BUCKET
      - name:  GITEA__STORAGE__MINIO_BUCKET
        value: gitea

      # sección [storage] MINIO_ACCESS_KEY_ID desde Secret
      - name:  GITEA__STORAGE__MINIO_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: gitea-minio-config
            key:  MINIO_ACCESS_KEY_ID

      # sección [storage] MINIO_SECRET_ACCESS_KEY desde Secret
      - name:  GITEA__STORAGE__MINIO_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: gitea-minio-config
            key:  MINIO_SECRET_ACCESS_KEY
  
  serviceAccount:
    create: true
    name: gitea-backup-sa
    
  extraDeploy:
    - apiVersion: batch/v1
      kind: Job
      metadata:
        name: import-repos
        annotations:
          "helm.sh/hook": post-install
          "helm.sh/hook-delete-policy": hook-succeeded
      spec:
        backoffLimit: 1
        template:
          spec:
            serviceAccountName: gitea-backup-sa
            containers:
            - name: importer
              image: "docker.gitea.com/gitea:1.20.3"
              env:
                - name: GITEA_COM_USER
                  valueFrom:
                    secretKeyRef:
                      name: gitea-com-credential
                      key: username
                - name: GITEA_COM_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: gitea-com-credential
                      key: token
              command: ["/bin/sh","-c"]
              args:
              - |
                until curl -sf http://localhost:3000/; do sleep 2; done
                SELFTOKEN=$(
                  gitea --config /data/gitea/conf/app.ini admin user generate-token \
                    --username {{ .Values.gitea.admin.username }} \
                    --password {{ .Values.gitea.admin.password }} \
                    --expire-in 0 \
                  | awk '{print $2}'
                )
                for repo in repo1 repo2; do
                  gitea --config /data/gitea/conf/app.ini admin repo migrate \
                    --auth-username "$GITEA_COM_USER" \
                    --auth-password "$GITEA_COM_TOKEN" \
                    --clone-addr "https://gitea.com/$GITEA_COM_USER/$repo.git" \
                    --repo-name "$repo" \
                    --mirror=false \
                    --private
                  echo "→ $repo importado"
                done
            restartPolicy: OnFailure

  persistence:
    enabled: false
    create: false
    mount: false
    claimName: gitea-shared-storage
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    storageClass:
    subPath:
    volumeName: ""
    annotations:
      helm.sh/resource-policy: keep