gitea:
  ingress:
    enabled: true
    ingressClassName: "traefik"  # Usar Traefik como controlador de Ingress
    annotations:
      kubernetes.io/ingress.class: "traefik"
      traefik.ingress.kubernetes.io/router.entrypoints: websecure, web
    hosts:
      - host: gitea.mabecenter.org  # El dominio donde se accederÃ¡ a gitea
        paths:
          - path: /
            pathType: Prefix
    tls:
      - secretName: tls-cert  # Certificado TLS para la conexiÃ³n segura
        hosts:
          - gitea.mabecenter.org
  
  podAnnotations:
    backup.velero.io/backup-volumes: "gitea-shared-storage"
  
  gitea:
    admin:
      existingSecret: gitea-admin-secret
    
    additionalConfigFromEnvs:
      # secciÃ³n [storage] MINIO_LOCATION
      - name:  GITEA__STORAGE__MINIO_LOCATION
        value: us-east-2

      # secciÃ³n [storage] MINIO_USE_SSL
      - name:  GITEA__STORAGE__MINIO_USE_SSL
        value: "false"

      # secciÃ³n [storage] MINIO_ENDPOINT
      - name:  GITEA__STORAGE__MINIO_ENDPOINT
        value: minio.minio.svc.cluster.local:9000

      # secciÃ³n [storage] STORAGE_TYPE
      - name:  GITEA__STORAGE__STORAGE_TYPE
        value: minio

      # secciÃ³n [storage] MINIO_BUCKET
      - name:  GITEA__STORAGE__MINIO_BUCKET
        value: gitea

      # secciÃ³n [storage] MINIO_ACCESS_KEY_ID desde Secret
      - name:  GITEA__STORAGE__MINIO_ACCESS_KEY_ID
        valueFrom:
          secretKeyRef:
            name: gitea-minio-config
            key:  MINIO_ACCESS_KEY_ID

      # secciÃ³n [storage] MINIO_SECRET_ACCESS_KEY desde Secret
      - name:  GITEA__STORAGE__MINIO_SECRET_ACCESS_KEY
        valueFrom:
          secretKeyRef:
            name: gitea-minio-config
            key:  MINIO_SECRET_ACCESS_KEY
  
  serviceAccount:
    create: true
    name: gitea-backup-sa
    
  extraDeploy:
    - apiVersion: batch/v1
      kind: Job
      metadata:
        name: import-repos
        annotations:
          "helm.sh/hook": post-install
          "helm.sh/hook-delete-policy": hook-failed
      spec:
        backoffLimit: 1
        template:
          spec:
            securityContext:
              runAsUser:    1000    # UID del usuario 'git' en la imagen oficial
              runAsGroup:   1000
              fsGroup:      1000
              runAsNonRoot: true
            serviceAccountName: gitea-backup-sa
            containers:
            - name: importer
              image: "docker.gitea.com/gitea:1.20.3"
              env:
                - name: GITEA_COM_USER
                  valueFrom:
                    secretKeyRef:
                      name: gitea-com-credential
                      key: username
                - name: GITEA_COM_TOKEN
                  valueFrom:
                    secretKeyRef:
                      name: gitea-com-credential
                      key: token
              command: ["/bin/sh","-c"]
              args:
              - |
                  # 1) Generar token admin con BasicAuth
                  SELFTOKEN=$(gitea --config /data/gitea/conf/app.ini admin user generate-access-token --username workwithdante --token-name testing2 --raw)
                  echo "ðŸ”‘ Token admin: $SELFTOKEN"

                  # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
                  # 2) Obtener UID del admin
                  USER_JSON=$(
                    curl -sSL -H "Authorization: token $SELFTOKEN" \
                         https://gitea.mabecenter.org/api/v1/user
                  )
                  SELF_UID=$(
                    printf '%s' "$USER_JSON" \
                    | grep -Eo '"id":[0-9]+' \
                    | cut -d: -f2
                  )
                  echo "ðŸ‘¤ Admin UID: $SELF_UID"

                  # â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”â€”
                  # 3) Migrar repos privados
                  for repo in repo1 repo2; do
                    echo "â†’ Migrando $repoâ€¦"
                    curl -sSL -X POST https://gitea.mabecenter.org/api/v1/repos/migrate \
                      -H "Authorization: token $SELFTOKEN" \
                      -H "Content-Type: application/json" \
                      -d '{
                            "clone_addr":   "https://gitea.com/'"${GITEA_COM_USER}"'/'"$repo"'.git",
                            "auth_username":"'"${GITEA_COM_USER}"'",
                            "auth_password":"'"${GITEA_COM_TOKEN}"'",
                            "uid":          '"$SELF_UID"',
                            "repo_name":    "'"$repo"'",
                            "mirror":       false,
                            "private":      true
                          }'
                    echo "âœ“ $repo importado"
                  done
            restartPolicy: OnFailure

  persistence:
    enabled: false
    create: false
    mount: false
    claimName: gitea-shared-storage
    size: 10Gi
    accessModes:
      - ReadWriteOnce
    labels: {}
    storageClass:
    subPath:
    volumeName: ""
    annotations:
      helm.sh/resource-policy: keep